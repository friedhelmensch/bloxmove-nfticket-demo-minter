const ethers = require("ethers");
const abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      { indexed: false, internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "uint256", name: "_tID", type: "uint256" },
      {
        indexed: false,
        internalType: "uint256",
        name: "creditsConsumed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creditsRemain",
        type: "uint256",
      },
    ],
    name: "ConsumedCredits",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "erc20Contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountERC20Tokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "serviceDescriptor",
        type: "uint32",
      },
    ],
    name: "IncomingERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "erc20Contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creditsAdded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensAdded",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "serviceDescriptor",
        type: "uint32",
      },
    ],
    name: "IncomingFunding",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "uint8", name: "version", type: "uint8" },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "credits",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerCredit",
        type: "uint256",
      },
    ],
    name: "InsufficientPayment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "serviceProvideContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "serviceDescriptor",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "status",
        type: "uint16",
      },
    ],
    name: "RegisterServiceProvider",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "string", name: "name", type: "string" },
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "uint32", name: "size", type: "uint32" },
          { internalType: "string[]", name: "keys", type: "string[]" },
          { internalType: "uint8[]", name: "keyTypes", type: "uint8[]" },
        ],
        indexed: false,
        internalType: "struct DataSchema",
        name: "schema",
        type: "tuple",
      },
    ],
    name: "SchemaRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newTicketID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "serviceFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "resellerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transactionFee",
        type: "uint256",
      },
    ],
    name: "SplitRevenue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "serviceType",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deductedFee",
        type: "uint256",
      },
    ],
    name: "TicketSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creditsAdded",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "erc20Contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountERC20Tokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "creditsAffordable",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chargedERC20",
        type: "uint256",
      },
    ],
    name: "TopUpTicket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: true, internalType: "address", name: "to", type: "address" },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "erc20Contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountCredits",
        type: "uint256",
      },
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: false, internalType: "address", name: "to", type: "address" },
    ],
    name: "WithDrawCredits",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "erc20Contract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountERC20Tokens",
        type: "uint256",
      },
      { indexed: true, internalType: "address", name: "from", type: "address" },
      { indexed: false, internalType: "address", name: "to", type: "address" },
    ],
    name: "WithDrawERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "expectedSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "WrongSender",
    type: "event",
  },
  {
    inputs: [{ internalType: "address", name: "_address", type: "address" }],
    name: "addWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "balanceOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "getApproved",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "serviceProvider", type: "address" },
    ],
    name: "getCompanyDescriptor",
    outputs: [{ internalType: "uint32", name: "descriptor", type: "uint32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMasterWallet",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "serviceProvider", type: "address" },
    ],
    name: "getReseller",
    outputs: [
      { internalType: "address", name: "contractAddress", type: "address" },
      { internalType: "address", name: "walletAddress", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "serviceProvider", type: "address" },
    ],
    name: "getResellerPoolSize",
    outputs: [{ internalType: "uint256", name: "poolSize", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint32", name: "companyDescriptor", type: "uint32" },
    ],
    name: "getServiceProvider",
    outputs: [
      { internalType: "address", name: "contractAddress", type: "address" },
      { internalType: "address", name: "walletAddress", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "serviceProvider", type: "address" },
    ],
    name: "getServiceProviderPoolSize",
    outputs: [{ internalType: "uint256", name: "poolSize", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenID", type: "uint256" }],
    name: "getTicketBalance",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "ticketID", type: "uint256" }],
    name: "getTicketData",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "tokenID", type: "uint256" },
          { internalType: "address", name: "serviceProvider", type: "address" },
          { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
          { internalType: "address", name: "issuedTo", type: "address" },
          { internalType: "uint256", name: "certValue", type: "uint256" },
          { internalType: "uint256", name: "certValidFrom", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "credits", type: "uint256" },
          { internalType: "uint256", name: "pricePerCredit", type: "uint256" },
          { internalType: "uint256", name: "serviceFee", type: "uint256" },
          { internalType: "uint256", name: "resellerFee", type: "uint256" },
          { internalType: "uint256", name: "transactionFee", type: "uint256" },
          { internalType: "string", name: "tokenURI", type: "string" },
        ],
        internalType: "struct Ticket",
        name: "_t",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTicketPoolSize",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransactionPoolSize",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryOwner",
    outputs: [{ internalType: "address", name: "owner", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_address", type: "address" }],
    name: "inWhitelist",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_processor", type: "address" }],
    name: "initProcessor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_erc20", type: "address" },
      { internalType: "uint32", name: "transactionFee", type: "uint32" },
      { internalType: "uint32", name: "ratioBase", type: "uint32" },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "owner", type: "address" },
      { internalType: "address", name: "operator", type: "address" },
    ],
    name: "isApprovedForAll",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "sContract", type: "address" }],
    name: "isServiceProvider",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "serviceContract", type: "address" },
      { internalType: "uint32", name: "", type: "uint32" },
    ],
    name: "isServiceProviderFor",
    outputs: [
      { internalType: "bool", name: "_isServiceProviderFor", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "recipient", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "tokenID", type: "uint256" },
          { internalType: "address", name: "serviceProvider", type: "address" },
          { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
          { internalType: "address", name: "issuedTo", type: "address" },
          { internalType: "uint256", name: "certValue", type: "uint256" },
          { internalType: "uint256", name: "certValidFrom", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "credits", type: "uint256" },
          { internalType: "uint256", name: "pricePerCredit", type: "uint256" },
          { internalType: "uint256", name: "serviceFee", type: "uint256" },
          { internalType: "uint256", name: "resellerFee", type: "uint256" },
          { internalType: "uint256", name: "transactionFee", type: "uint256" },
          { internalType: "string", name: "tokenURI", type: "string" },
        ],
        internalType: "struct Ticket",
        name: "ticket",
        type: "tuple",
      },
    ],
    name: "mintNFTicket",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "tokenID", type: "uint256" },
          { internalType: "address", name: "serviceProvider", type: "address" },
          { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
          { internalType: "address", name: "issuedTo", type: "address" },
          { internalType: "uint256", name: "certValue", type: "uint256" },
          { internalType: "uint256", name: "certValidFrom", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "credits", type: "uint256" },
          { internalType: "uint256", name: "pricePerCredit", type: "uint256" },
          { internalType: "uint256", name: "serviceFee", type: "uint256" },
          { internalType: "uint256", name: "resellerFee", type: "uint256" },
          { internalType: "uint256", name: "transactionFee", type: "uint256" },
          { internalType: "string", name: "tokenURI", type: "string" },
        ],
        internalType: "struct Ticket",
        name: "_ret",
        type: "tuple",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "ownerOf",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "sender", type: "address" },
      {
        components: [
          { internalType: "uint256", name: "tokenID", type: "uint256" },
          { internalType: "address", name: "serviceProvider", type: "address" },
          { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
          { internalType: "address", name: "issuedTo", type: "address" },
          { internalType: "uint256", name: "certValue", type: "uint256" },
          { internalType: "uint256", name: "certValidFrom", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "credits", type: "uint256" },
          { internalType: "uint256", name: "pricePerCredit", type: "uint256" },
          { internalType: "uint256", name: "serviceFee", type: "uint256" },
          { internalType: "uint256", name: "resellerFee", type: "uint256" },
          { internalType: "uint256", name: "transactionFee", type: "uint256" },
          { internalType: "string", name: "tokenURI", type: "string" },
        ],
        internalType: "struct Ticket",
        name: "_t",
        type: "tuple",
      },
    ],
    name: "presentCertificateRepurchase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "tokenID", type: "uint256" },
          { internalType: "address", name: "serviceProvider", type: "address" },
          { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
          { internalType: "address", name: "issuedTo", type: "address" },
          { internalType: "uint256", name: "certValue", type: "uint256" },
          { internalType: "uint256", name: "certValidFrom", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "credits", type: "uint256" },
          { internalType: "uint256", name: "pricePerCredit", type: "uint256" },
          { internalType: "uint256", name: "serviceFee", type: "uint256" },
          { internalType: "uint256", name: "resellerFee", type: "uint256" },
          { internalType: "uint256", name: "transactionFee", type: "uint256" },
          { internalType: "string", name: "tokenURI", type: "string" },
        ],
        internalType: "struct Ticket",
        name: "_t",
        type: "tuple",
      },
      { internalType: "uint256", name: "credits", type: "uint256" },
      { internalType: "address", name: "ERC20Token", type: "address" },
    ],
    name: "presentTicketFeeToPool",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "tokenID", type: "uint256" },
          { internalType: "address", name: "serviceProvider", type: "address" },
          { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
          { internalType: "address", name: "issuedTo", type: "address" },
          { internalType: "uint256", name: "certValue", type: "uint256" },
          { internalType: "uint256", name: "certValidFrom", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "credits", type: "uint256" },
          { internalType: "uint256", name: "pricePerCredit", type: "uint256" },
          { internalType: "uint256", name: "serviceFee", type: "uint256" },
          { internalType: "uint256", name: "resellerFee", type: "uint256" },
          { internalType: "uint256", name: "transactionFee", type: "uint256" },
          { internalType: "string", name: "tokenURI", type: "string" },
        ],
        internalType: "struct Ticket",
        name: "ticket",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "serviceProvider", type: "address" },
      { internalType: "address", name: "reseller", type: "address" },
      { internalType: "address", name: "resellerWallet", type: "address" },
    ],
    name: "registerResellerServiceProvider",
    outputs: [{ internalType: "uint16", name: "status", type: "uint16" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "serviceProvider", type: "address" },
      { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
      {
        internalType: "address",
        name: "serviceProviderWallet",
        type: "address",
      },
    ],
    name: "registerServiceProvider",
    outputs: [{ internalType: "uint16", name: "status", type: "uint16" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_address", type: "address" }],
    name: "removeWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "operator", type: "address" },
      { internalType: "bool", name: "approved", type: "bool" },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "master", type: "address" }],
    name: "setMasterWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "tokenId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "ticketID", type: "uint256" },
      { internalType: "uint256", name: "creditsAdded", type: "uint256" },
      { internalType: "address", name: "erc20Contract", type: "address" },
      { internalType: "uint256", name: "numberERC20Tokens", type: "uint256" },
    ],
    name: "topUpTicket",
    outputs: [
      { internalType: "uint256", name: "creditsAffordable", type: "uint256" },
      { internalType: "uint256", name: "chargedERC20", type: "uint256" },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "from", type: "address" },
      { internalType: "address", name: "to", type: "address" },
      { internalType: "uint256", name: "tokenId", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "ticketID", type: "uint256" },
      { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
    ],
    name: "updateServiceType",
    outputs: [{ internalType: "uint256", name: "_sD", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "ticketID", type: "uint256" },
      {
        components: [
          { internalType: "uint256", name: "tokenID", type: "uint256" },
          { internalType: "address", name: "serviceProvider", type: "address" },
          { internalType: "uint32", name: "serviceDescriptor", type: "uint32" },
          { internalType: "address", name: "issuedTo", type: "address" },
          { internalType: "uint256", name: "certValue", type: "uint256" },
          { internalType: "uint256", name: "certValidFrom", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "credits", type: "uint256" },
          { internalType: "uint256", name: "pricePerCredit", type: "uint256" },
          { internalType: "uint256", name: "serviceFee", type: "uint256" },
          { internalType: "uint256", name: "resellerFee", type: "uint256" },
          { internalType: "uint256", name: "transactionFee", type: "uint256" },
          { internalType: "string", name: "tokenURI", type: "string" },
        ],
        internalType: "struct Ticket",
        name: "_t",
        type: "tuple",
      },
    ],
    name: "updateTicketData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "ticketID", type: "uint256" },
      { internalType: "address", name: "erc20Contract", type: "address" },
      { internalType: "uint256", name: "amountERC20Tokens", type: "uint256" },
      { internalType: "address", name: "sendTo", type: "address" },
    ],
    name: "withDrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const get_nfticket_contract = (signerOrProvider) => {
  const NFTicketContract = new ethers.Contract(
    "0x5a9708C0db668d8Ef5Fb90B763BBb7D5db01bbA7",
    abi,
    signerOrProvider
  );

  return NFTicketContract;
};

module.exports = get_nfticket_contract;
